version: 1
backend:
  buildEnvironment:
    image: aws/codebuild/standard:7.0
  phases:
    preBuild:
      commands:
        - echo "Build environment is $CODEBUILD_BUILD_IMAGE"
        - mkdir -p .npm
        - export NVM_DIR="$HOME/.nvm"
        - |
          if [ ! -s "$NVM_DIR/nvm.sh" ]; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          fi
        - source "$NVM_DIR/nvm.sh"
        - nvm install 20.9.0
        - nvm use 20.9.0
        - export DOCKER_HOST=unix:///var/run/docker.sock
        - export DOCKERD_BIN=$(command -v dockerd || true)
        - echo "Using dockerd binary: ${DOCKERD_BIN}"
        - |
          if [ -z "$DOCKERD_BIN" ]; then
            echo "dockerd binary not found";
            exit 1;
          fi
        - nohup sudo "$DOCKERD_BIN" --host=unix:///var/run/docker.sock > /tmp/dockerd.log 2>&1 &
        - |
          for i in $(seq 1 90); do
            if docker info >/dev/null 2>&1; then
              echo "Docker daemon is ready";
              break;
            fi
            sleep 1;
            if [ $i -eq 90 ]; then
              echo "Docker failed to start. Dumping /tmp/dockerd.log:";
              cat /tmp/dockerd.log;
              exit 1;
            fi
          done
    build:
      commands:
        - source "$NVM_DIR/nvm.sh"
        - nvm use 20.9.0
        - npm ci --cache .npm --prefer-offline
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
  cache:
    paths:
      - .npm/**/*
      - node_modules/**/*
frontend:
  buildEnvironment:
    image: aws/codebuild/standard:7.0
  phases:
    preBuild:
      commands:
        - export NVM_DIR="$HOME/.nvm"
        - source "$NVM_DIR/nvm.sh"
        - nvm use 20.9.0
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - .next/cache/**/*
      - .npm/**/*
      - node_modules/**/*