version: 1
backend:
  buildEnvironment:
    image: aws/codebuild/standard:7.0
  phases:
    preBuild:
      commands:
        - echo "Build environment is $CODEBUILD_BUILD_IMAGE"
        - mkdir -p .npm
        - export NVM_DIR="$HOME/.nvm"
        - |
          if [ ! -s "$NVM_DIR/nvm.sh" ]; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          fi
        - source "$NVM_DIR/nvm.sh"
        - nvm install 20.9.0
        - nvm use 20.9.0
        - dnf install -y docker
        - nohup /usr/bin/dockerd --host=unix:///var/run/docker.sock > /tmp/dockerd.log 2>&1 &
        - timeout 60 sh -c "until docker info >/dev/null 2>&1; do sleep 1; done"
    build:
      commands:
        - source "$NVM_DIR/nvm.sh"
        - nvm use 20.9.0
        - npm ci --cache .npm --prefer-offline
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
  cache:
    paths:
      - .npm/**/*
      - node_modules/**/*
  image: aws/codebuild/standard:7.0
frontend:
  buildEnvironment:
    image: aws/codebuild/standard:7.0
  phases:
    preBuild:
      commands:
        - export NVM_DIR="$HOME/.nvm"
        - source "$NVM_DIR/nvm.sh"
        - nvm use 20.9.0
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - .next/cache/**/*
      - .npm/**/*
      - node_modules/**/*